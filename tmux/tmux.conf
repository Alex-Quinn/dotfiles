# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v -c "#{pane_current_path}"
bind v split-window -h -c '#{pane_current_path}'

bind ^s split-window -v -c "#{pane_current_path}"
bind ^v split-window -h -c "#{pane_current_path}"

# open panes in same path when using canonical tmux splits
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# Provide command to generate a 2:(1:1) ratio layout
bind '@' \
  split-window -h -c "#{pane_current_path}" -p 33 \;\
  send-keys 'clear' Enter \;\
  split-window -v -c "#{pane_current_path}" \;\
  send-keys 'clear' Enter \;\
  split-window -v -c "#{pane_current_path}" \;\
  send-keys 'clear' Enter \;\
  select-pane -L \;\
  send-keys 'vim' Enter \;\

# Provide command to generate a PR review tab
bind '{' \
  split-window -h -c "#{pane_current_path}" \;\
  send-keys 'clear' Enter \;\
  send-keys 'git diff origin/master...HEAD' Enter \;\
  select-pane -L \;\
  send-keys 'clear' Enter \;\
  send-keys 'vim' Enter \;\
  split-window -v -c "#{pane_current_path}" -p 15 \;\
  send-keys 'clear' Enter \;\
  send-keys 'git log --oneline origin/master..HEAD' Enter \;\

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind ^h select-pane -L
bind ^j select-pane -D
bind ^k select-pane -U
bind ^l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind -r < resize-pane -L 10
bind -r > resize-pane -R 10
bind -r - resize-pane -D 10
bind -r + resize-pane -U 10
bind = select-layout tiled

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# session management
bind C new-session
bind L choose-session

# vi-style controls for copy mode
bind p paste-buffer
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-selection
bind -T copy-mode-vi r send-keys -X rectangle-toggle

# Set the prefix to ^A
unbind C-b
set -g prefix ^A
bind a send-prefix

# Start numbering windows at 1
set -g base-index 1

# automatically renumber remaining windows when closing a window
set-option -g renumber-windows on

# toggle last window like screen
bind ^a last-window

set -g update-environment "DISPLAY WINDOWID SSH_ASKPASS SSH_AGENT_PID SSH_CONNECTION"

bind X kill-pane -a

# longer scrollback
set -g history-limit 20000

set -g status-bg default
set -g status-fg white

# left side of status bar holds "(>- session name -<)"
set -g status-left-length 100
set -g status-style range=left,bg=green,fg=black,bold
set -g status-left ''

# right side of status bar holds date time"
set -g status-right-length 100
set -g status-style range=right,fg=black,bold
set -g status-right "#[fg=cyan]%A, %d %b %Y %I:%M %p"

# make background window look like white tab
set-window-option -g window-status-style bg=default,fg=white,none
set-window-option -g window-status-format '#[fg=colour214,bg=colour235] #I #[fg=white,bg=colour236] #W #[default]'

# make foreground window look like bold yellow foreground tab
set-window-option -g window-status-current-style none
set-window-option -g window-status-current-format '#[fg=black,bg=colour214] #I #[fg=brightwhite,bg=colour238] #W #[default]'

# active terminal yellow border, non-active white
set -g pane-border-style bg=default,fg=colour238
set -g pane-active-border-style bg=default,fg=colour214

# set a 256color $TERM variable so programs inside tmux know they can use 256 colors
set -g default-terminal screen-256color

# Scrolling
set-window-option -g mode-keys vi

# reload tmux config file with C-a r
bind r source ~/.tmux.conf

# Create a new window and prompt for name
bind N command-prompt "new-window -n '%%' -c '#{pane_current_path}'"
bind c new-window -c '#{pane_current_path}'

# Rebind prefix to b
bind B set -g prefix ^b
bind A set -g prefix ^a

# Save tmux history - http://unix.stackexchange.com/questions/26548/write-all-tmux-scrollback-to-a-file
bind S command-prompt -p 'save history to filename:' -I '~/tmux.history' 'capture-pane -S -32768 ; save-buffer %1 ; delete-buffer'
